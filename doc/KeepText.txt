*KeepText.txt*          Keep only {motion} text in lines or the buffer.

			 KEEP TEXT    by Ingo Karkat
								*KeepText.vim*
description			|KeepText-description|
usage				|KeepText-usage|
installation			|KeepText-installation|
configuration			|KeepText-configuration|
limitations			|KeepText-limitations|
known problems			|KeepText-known-problems|
todo				|KeepText-todo|
history				|KeepText-history|

==============================================================================
DESCRIPTION						*KeepText-description*

This plugin ...

HOW IT WORKS								     *

SOURCE									     *
(Original Vim tip, Stack Overflow answer, ...)

SEE ALSO								     *
(Plugins offering complementary functionality, or plugins using this library.)

RELATED WORKS								     *
(Alternatives from other authors, other approaches, references not used here.)

==============================================================================
USAGE							      *KeepText-usage*
						     *<Leader>k* *v_<Leader>k*
["x]<Leader>k{motion}	Delete any text in the line(s) covered by {motion}
			except for the text that {motion} moves over itself,
			and any indent (including a potential comment prefix).
			Register x contains the deleted text (and the indent,
			too).
{Visual}["x]<Leader>k	Delete any text in the selected line(s) except the
			selected text itself, and any indent / comment prefix.
						   *g<Leader>k* *v_g<Leader>k*
["x]g<Leader>k{motion}	Delete any text in the entire buffer except for the
			text that {motion} moves over itself.
			Register x contains the deleted text.
{Visual}["x]g<Leader>k	Delete any text in the entire buffer except the
			selected text itself.
								  *<Leader>zk*
["x]<Leader>zk{motion}	Delete any text in the last selection except for the
			text that {motion} moves over itself. {motion} must be
			(at least partially) inside the selection.
			Register x contains the deleted text.

								  *:KeepRange*
:[range]KeepRange [register] {range}
			Delete any lines of the buffer / within [range] except
			those that are covered by {range} into the unnamed
			register / [register].
:[range]KeepRange! [register] {range}
			Delete any lines of the buffer / within [range] that
			are covered by {range} into the unnamed register /
			[register].
								  *:KeepMatch*
:[range]KeepMatch [register] /{pattern}/[flags]
			Within the current line / [range], delete any text
			that does not match {pattern} into the unnamed
			register / [register]. Only match(es) are kept.
:[range]KeepMatch [register] /{pattern}/{string}/[flags]
			Like above, but keep {string} (which can refer to the
			match via &, \1, etc.)

:[range]KeepMatch! [register] /{pattern}/[flags]
			Within the current line / [range], delete any text
			that matches {pattern} into the unnamed
			register / [register]. Only text that does not match
			is kept. This is like
			    :[range]substitute/{pattern}//[flags]
			but it stores the deleted text in a register.
:[range]KeepMatch! [register] /{pattern}/{string}/[flags]
			Like above, but store {string} (which can refer to the
			match via &, \1, etc.) in a register.

EXAMPLE							    *KeepText-example*

==============================================================================
INSTALLATION					       *KeepText-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim KeepText*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES					       *KeepText-dependencies*

- Requires Vim 7.0 or higher.
- Requires the |ingo-library.vim| plugin (vimscript #4433), version 1.029 or
  higher.
- repeat.vim (vimscript #2136) plugin (optional)
- visualrepeat.vim (vimscript #3848) plugin (optional)

==============================================================================
CONFIGURATION					      *KeepText-configuration*

For a permanent configuration, put the following commands into your |vimrc|:
							      *KeepText-remap*
If you want to use different mappings, map your keys to the
<Plug>(KeepText...) mapping targets _before_ sourcing the script
(e.g. in your |vimrc|): >
    nmap <Leader>k <Plug>(KeepTextLineOperator)
    xmap <Leader>k <Plug>(KeepTextLineVisual)
    nmap <Leader>K <Plug>(KeepTextBufferOperator)
    xmap <Leader>K <Plug>(KeepTextBufferVisual)
    nmap <Leader>z <Plug>(KeepTextSelectionOperator)
<
==============================================================================
LIMITATIONS						*KeepText-limitations*

KNOWN PROBLEMS					     *KeepText-known-problems*

TODO							       *KeepText-todo*

IDEAS							      *KeepText-ideas*

==============================================================================
HISTORY							    *KeepText-history*

GOAL
First published version.

0.01	01-Feb-2013
Started development.

==============================================================================
Copyright: (C) 2013-2017 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
